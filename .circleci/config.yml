# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@2.1.0


jobs:
  #--- JOB 1: test the app on circleci ---#
  build_test:
    docker:
      - image: circleci/python:3.7
    steps:
      # 1 A:
      #start by checking out the repo
      - checkout
      # 1 B:
      #restore the dependencies from cache so we don't have to waste time insalling
      - run:
          name: Update CircleCI Permissions
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
            echo ${GCLOUD_SERVICE_KEY} > ./app/GCPkeys.json
            cat ./app/GCPkeys.json
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      # 1 C:
      #run the commands below to set up the virtual env in CircleCI
      #so that unit tests can be run
      - run:
          name: Install Python Dependencies
          command: |
            sudo pip install pipenv
            pipenv install
            pipenv run pip freeze > ./app/requirements.txt
      # 1 D:
      #save the cache to speed up future runs
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      # 1 E:
      # actually run the unit tests
      - run:
          name: Run Unit Tests
          command: |
            pipenv run pytest
      # 1 F:
      #persist the generated requirements.txt to workspace
      - persist_to_workspace:
          root: ./
          paths: .


  #--- JOB 2: deploy to google app engine ---#
  gae_deploy:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      # 2 A:
      #check out the repo
      - checkout
      # 2 B:
      #attach the workspace so we can get at requirements.txt
      - attach_workspace:
          at: ./
      # 2 C:
      #use the gcp orb to automate connecting to gcp
      - gcp-cli/initialize
      # 2 D:
      #now, finally, deploy the app
      - run:
          name: Deploy to Google App Engine
          command: |
            gcloud app deploy /root/project/app/app.yaml




# ------- WORKFLOWS ------- #
workflows:
  #run the unit tests and deploy to gae if pass
  build_test_deploy:
    jobs:
      - build_test:
          #ensure we only deploy the master branch and not a dev branch
          filters:
            branches:
              only:
                - main

      - gae_deploy:
          requires:
            - build_test
          filters:
            branches:
              only:
                - main
